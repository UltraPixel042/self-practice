// 1. ‡πÉ‡∏ä‡πâ map()
// ‡πÉ‡∏´‡πâ array ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç‡∏¢‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏≤‡∏°
const nums1 = [1, 2, 3, 4, 5];
const newNum = nums1.map(num => num ** 3)
console.log(newNum)
// üëâ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: [1, 8, 27, 64, 125]


// 2. ‡πÉ‡∏ä‡πâ filter()
// ‡πÉ‡∏´‡πâ array ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥ ‡∏Ñ‡∏±‡∏î‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏¢‡∏≤‡∏ß‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 4 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
const words = ["dog", "banana", "cat", "elephant", "sun"];
const longWord = words.filter(word => word.length > 4)
console.log(longWord)
// üëâ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: ["banana", "elephant"]


// 3. ‡πÉ‡∏ä‡πâ reduce()
// ‡πÉ‡∏´‡πâ array ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
const prices = [100, 250, 300, 50];
const total = prices.reduce((sum, t) => sum + t, 0)
console.log(total)
// üëâ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: 700


// 4. ‡πÉ‡∏ä‡πâ find()
// ‡πÉ‡∏´‡πâ array ‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡∏≠‡∏á ‡∏´‡∏≤‡∏Ñ‡∏≥‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ "B"
const cities = ["Tokyo", "Bangkok", "London", "Berlin"];
const startB = cities.find(c => c.startsWith("B"))
console.log(startB)
// üëâ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: "Bangkok"


// 5. ‡πÉ‡∏ä‡πâ some()
// ‡πÉ‡∏´‡πâ array ‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 0 ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
const temps = [15, -2, 8, 20];
const lowTemp = temps.some(t => t < 0)
console.log(lowTemp)
// üëâ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: true


// 6. ‡πÉ‡∏ä‡πâ every()
// ‡πÉ‡∏´‡πâ array ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 50 ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
const marks = [70, 85, 90, 100, 60];
const check = marks.every(m => m > 50)
console.log(check)
// üëâ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: true


// 7. ‡πÉ‡∏ä‡πâ sort()
// ‡πÉ‡∏´‡πâ array ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
const fruits = ["Mango", "Apple", "Banana", "Orange"];
const fruits2 = fruits.sort((a, b) => a.localeCompare(b))
console.log(fruits2)
// üëâ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: ["Apple", "Banana", "Mango", "Orange"]

console.log("Apple".localeCompare("Banana")); 


// 8. ‡πÉ‡∏ä‡πâ forEach()
// ‡πÉ‡∏´‡πâ array ‡∏Ç‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠ ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö "Hello, <name>!"
const people = ["Anna", "Ben", "Chris"];
const hello = people.forEach(n => console.log(`Hello, ${n}!`))
// üëâ Output ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:
// Hello, Anna!
// Hello, Ben!
// Hello, Chris!


// 9. ‡πÉ‡∏ä‡πâ includes()
// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÉ‡∏ô array ‡∏°‡∏µ‡πÄ‡∏•‡∏Ç 30 ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
const numbers = [10, 20, 30, 40, 50];
const finds = numbers.includes(30)
console.log(finds)
// üëâ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: true


// 10. ‡πÉ‡∏ä‡πâ flat()
// ‡πÉ‡∏´‡πâ array ‡∏ã‡πâ‡∏≠‡∏ô‡∏Å‡∏±‡∏ô 2 ‡∏ä‡∏±‡πâ‡∏ô ‡πÅ‡∏õ‡∏•‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô array ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
const nested = [[1, 2], [3, 4], [5]];
const multi = nested.flat()
console.log(multi)
// üëâ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: [1, 2, 3, 4, 5]
